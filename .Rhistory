y = "Quantidade de jogos") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
count(genre) %>%
ggplot(aes(x = fct_reorder(genre, n, .desc = TRUE), y = n)) +
geom_col(color = "steelblue",fill = "lightblue") +
labs(title = "Quantidade de jogos por gênero",
x = "Gênero",
y = "Quantidade de jogos") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df, aes(console == "Wii", total_sales)) +
geom_point() +
geom_line()
df %>%
filter(console == "Wii") %>%
count(genre) %>%
arrange(desc(n)) %>%
mutate(Genre = factor(genre, levels = genre)) %>%
ggplot(aes(x = genre, y = n)) +
geom_bar(stat = "identity") +
labs(title = "Quantidade de Jogos por Gênero no Wii",
x = "Gênero", y = "Quantidade") +
coord_flip() +
theme_minimal()
vetor_final <- c(binomial, normal)
binomial <- rbinom(100,10,0.8)
normal <- rnorm(50 ,mean = 0, sd = 1)
vetor_final <- c(binomial, normal)
matriz <- matrix(data = vetor_final, nrow = 50, ncol = 3, byrow = FALSE)
matriz
MediaFinal <- (matriz[,1] + matriz[,2] + matriz[,3])/3
aprovacao <- ifelse(MediaFinal > 5, "Aprovado", "Reprovado")
df <- data.frame("NotaP1" = matriz[,1], "NotaP2" = matriz[,2], "NotaTrabalho" = matriz[,3], "MediaFinal" = MediaFinal, "Situacao" = aprovacao)
df
aprovacao <- ifelse(df$MediaFinal)
vetor_situacao <- df$Situacao == "Aprovado"
vetor_situacao <- ifelse(vetor_situacao == TRUE ,1,0)
vetor_situacao
numero_aprovados <- sum(vetor_situacao)
percentual_aprovados <- numero_aprovados / length(vetor_situacao)
print(numero_aprovados)
print(percentual_aprovados)
df <- df %>%
mutate(franquia = case_when(
str_detect(name, "GTA|Grand Theft Auto") ~ "GTA",
str_detect(name, "Call of Duty") ~ "Call of Duty",
str_detect(name, "Elder Scrolls|Skyrim|Oblivion|Morrowind") ~ "The Elder Scrolls",
str_detect(name, "FIFA") ~ "FIFA",
str_detect(name, "Red Dead") ~ "Red Dead Redemption",
TRUE ~ "Outros"
))
library(stringr)
library(stringr)
df <- df %>%
mutate(franquia = case_when(
str_detect(name, "GTA|Grand Theft Auto") ~ "GTA",
str_detect(name, "Call of Duty") ~ "Call of Duty",
str_detect(name, "Elder Scrolls|Skyrim|Oblivion|Morrowind") ~ "The Elder Scrolls",
str_detect(name, "FIFA") ~ "FIFA",
str_detect(name, "Red Dead") ~ "Red Dead Redemption",
TRUE ~ "Outros"
))
df_filtrado <- df_filtrado %>%
mutate(franquia = case_when(
str_detect(title, "GTA|Grand Theft Auto") ~ "GTA",
str_detect(title, "Call of Duty") ~ "Call of Duty",
str_detect(title, "Elder Scrolls|Skyrim|Oblivion|Morrowind") ~ "The Elder Scrolls",
str_detect(title, "FIFA") ~ "FIFA",
str_detect(title, "Red Dead") ~ "Red Dead Redemption",
TRUE ~ "Outros"
))
df %>%
filter(franquia != "Outros") %>%
count(franquia, name = "quantidade_de_jogos")
df_filtrado %>%
filter(franquia != "Outros") %>%
count(franquia, name = "quantidade_de_jogos")
df_resumido %>% filter(franquia == "Call of Duty")
df_filtrado %>% filter(franquia == "Call of Duty")
df_franquias <- df %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(name), # conta jogos únicos, não considerando plataforma
vendas_globais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(name), # conta jogos únicos, não considerando plataforma
vendas_globais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title), # conta jogos únicos, não considerando plataforma
vendas_globais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
df_franquias
df_franquias %>% filter(franquia == "GTA")
df_filtrado %>%
filter(franquia != "Outros") %>%
count(franquia, name = "quantidade_de_jogos")
# Visualizar resultado
df_franquias
library(stringr)
df_filtrado <- df_filtrado %>%
mutate(franquia = case_when(
str_detect(title, "GTA|Grand Theft Auto") ~ "GTA",
str_detect(title, "Call of Duty") ~ "Call of Duty",
str_detect(title, "Elder Scrolls|Skyrim|Oblivion|Morrowind") ~ "The Elder Scrolls",
str_detect(title, "FIFA") ~ "FIFA",
str_detect(title, "Red Dead") ~ "Red Dead Redemption",
TRUE ~ "Outros"
))
# Análise das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title), # jogos únicos, ignorando plataforma
vendas_totais = sum(Global_Sales, na.rm = TRUE),
media_nota = mean(Meta_Score, na.rm = TRUE),
.groups = "drop"
)
# Visualizar resultado
df_franquias
# Análise das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title), # jogos únicos, ignorando plataforma
vendas_totais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
# Análise das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title), # jogos únicos, ignorando plataforma
vendas_totais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
# Visualizar resultado
df_franquias
# ==========================
# 1. Vendas totais por franquia
# ==========================
ggplot(df_franquias, aes(x = reorder(franquia, vendas_totais), y = vendas_totais)) +
geom_col(fill = "steelblue") +
labs(
title = "Vendas Totais por Franquia",
x = "Franquia",
y = "Vendas Totais (em milhões)"
) +
coord_flip() +
theme_minimal()
# ==========================
# 2. Quantidade de jogos por franquia
# ==========================
ggplot(df_franquias, aes(x = reorder(franquia, quantidade_de_jogos), y = quantidade_de_jogos)) +
geom_col(fill = "darkorange") +
labs(
title = "Quantidade de Jogos por Franquia",
x = "Franquia",
y = "Quantidade de Jogos"
) +
coord_flip() +
theme_minimal()
# ==========================
# 3. Média das notas (Meta Score) por franquia
# ==========================
ggplot(df_franquias, aes(x = reorder(franquia, media_nota), y = media_nota)) +
geom_col(fill = "forestgreen") +
labs(
title = "Média das Notas (Meta Score) por Franquia",
x = "Franquia",
y = "Média das Notas"
) +
coord_flip() +
theme_minimal()
df_jogos_franquia <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia, title) %>%
summarise(
vendas_globais = sum(Global_Sales, na.rm = TRUE),
.groups = "drop"
)
# ==========================
# 1. Vendas totais por franquia
# ==========================
ggplot(df_franquias, aes(x = reorder(franquia, vendas_totais), y = vendas_totais)) +
geom_col(fill = "steelblue") +
labs(
title = "Vendas Totais por Franquia",
x = "Franquia",
y = "Vendas Totais (em milhões)"
) +
coord_flip() +
theme_minimal()
# ==========================
# 2. Quantidade de jogos por franquia
# ==========================
ggplot(df_franquias, aes(x = reorder(franquia, quantidade_de_jogos), y = quantidade_de_jogos)) +
geom_col(fill = "darkorange") +
labs(
title = "Quantidade de Jogos por Franquia",
x = "Franquia",
y = "Quantidade de Jogos"
) +
coord_flip() +
theme_minimal()
# ==========================
# 3. Média das notas (Meta Score) por franquia
# ==========================
ggplot(df_franquias, aes(x = reorder(franquia, media_nota), y = media_nota)) +
geom_col(fill = "forestgreen") +
labs(
title = "Média das Notas (Meta Score) por Franquia",
x = "Franquia",
y = "Média das Notas"
) +
coord_flip() +
theme_minimal()
ggplot(df_jogos_franquia, aes(x = reorder(title, vendas_globais), y = vendas_globais, fill = franquia)) +
geom_col() +
facet_wrap(~franquia, scales = "free") +
coord_flip() +
labs(
title = "Distribuição das Vendas por Jogo Dentro de Cada Franquia",
x = "Jogo",
y = "Vendas Globais (em milhões)"
) +
theme_minimal() +
theme(legend.position = "none")
df_jogos_franquia <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia, title) %>%
summarise(
vendas_globais = sum(Global_Sales, na.rm = TRUE),
.groups = "drop"
)
ggplot(df_jogos_franquia, aes(x = reorder(title, vendas_globais), y = vendas_globais, fill = franquia)) +
geom_col() +
facet_wrap(~franquia, scales = "free") +
coord_flip() +
labs(
title = "Distribuição das Vendas por Jogo Dentro de Cada Franquia",
x = "Jogo",
y = "Vendas Globais (em milhões)"
) +
theme_minimal() +
theme(legend.position = "none")
df_jogos_franquia <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia, title) %>%
summarise(
vendas_globais = sum(Global_Sales, na.rm = TRUE),
.groups = "drop"
)
df_jogos_franquia <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia, title) %>%
summarise(
vendas_globais = sum(total_sales, na.rm = TRUE),
.groups = "drop"
)
ggplot(df_jogos_franquia, aes(x = reorder(title, vendas_globais), y = vendas_globais, fill = franquia)) +
geom_col() +
facet_wrap(~franquia, scales = "free") +
coord_flip() +
labs(
title = "Distribuição das Vendas por Jogo Dentro de Cada Franquia",
x = "Jogo",
y = "Vendas Globais (em milhões)"
) +
theme_minimal() +
theme(legend.position = "none")
### Analisando as principais franquias de josogs - GTA, Call of Duty, The elder Scrolls, Fifa e Red dead Redemption
df_filtrado <- df_filtrado %>%
mutate(franquia = case_when(
str_detect(title, "GTA|Grand Theft Auto") ~ "GTA",
str_detect(title, "Call of Duty") ~ "Call of Duty",
str_detect(title, "Elder Scrolls|Skyrim|Oblivion|Morrowind") ~ "The Elder Scrolls",
str_detect(title, "FIFA") ~ "FIFA",
str_detect(title, "Red Dead") ~ "Red Dead Redemption",
TRUE ~ "Outros"
))
# Análise das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title), # jogos únicos, ignorando plataforma
vendas_totais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
# Visualizar resultado
library(tidyverse)
### Analisando as principais franquias de josogs - GTA, Call of Duty, The elder Scrolls, Fifa e Red dead Redemption
df_filtrado <- df_filtrado %>%
mutate(franquia = case_when(
str_detect(title, "GTA|Grand Theft Auto") ~ "GTA",
str_detect(title, "Call of Duty") ~ "Call of Duty",
str_detect(title, "Elder Scrolls|Skyrim|Oblivion|Morrowind") ~ "The Elder Scrolls",
str_detect(title, "FIFA") ~ "FIFA",
str_detect(title, "Red Dead") ~ "Red Dead Redemption",
TRUE ~ "Outros"
))
# Análise das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title), # jogos únicos, ignorando plataforma
vendas_totais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
# Base de dados com resumo das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title),
vendas_totais = sum(Global_Sales, na.rm = TRUE),
media_nota = mean(Meta_Score, na.rm = TRUE),
.groups = "drop"
)
### Analisando as principais franquias de josogs - GTA, Call of Duty, The elder Scrolls, Fifa e Red dead Redemption
df_filtrado <- df_filtrado %>%
mutate(franquia = case_when(
str_detect(title, "GTA|Grand Theft Auto") ~ "GTA",
str_detect(title, "Call of Duty") ~ "Call of Duty",
str_detect(title, "Elder Scrolls|Skyrim|Oblivion|Morrowind") ~ "The Elder Scrolls",
str_detect(title, "FIFA") ~ "FIFA",
str_detect(title, "Red Dead") ~ "Red Dead Redemption",
TRUE ~ "Outros"
))
# Análise das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title), # jogos únicos, ignorando plataforma
vendas_totais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
# Base de dados com resumo das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title),
vendas_totais = sum(Global_Sales, na.rm = TRUE),
media_nota = mean(Meta_Score, na.rm = TRUE),
.groups = "drop"
)
### Analisando as principais franquias de josogs - GTA, Call of Duty, The elder Scrolls, Fifa e Red dead Redemption
df_filtrado <- df_filtrado %>%
mutate(franquia = case_when(
str_detect(title, "GTA|Grand Theft Auto") ~ "GTA",
str_detect(title, "Call of Duty") ~ "Call of Duty",
str_detect(title, "Elder Scrolls|Skyrim|Oblivion|Morrowind") ~ "The Elder Scrolls",
str_detect(title, "FIFA") ~ "FIFA",
str_detect(title, "Red Dead") ~ "Red Dead Redemption",
TRUE ~ "Outros"
))
# Análise das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title), # jogos únicos, ignorando plataforma
vendas_totais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
# Base de dados com resumo das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title),
vendas_totais = sum(total_sales, na.rm = TRUE),
media_nota = mean(Meta_Score, na.rm = TRUE),
.groups = "drop"
)
### Analisando as principais franquias de josogs - GTA, Call of Duty, The elder Scrolls, Fifa e Red dead Redemption
df_filtrado <- df_filtrado %>%
mutate(franquia = case_when(
str_detect(title, "GTA|Grand Theft Auto") ~ "GTA",
str_detect(title, "Call of Duty") ~ "Call of Duty",
str_detect(title, "Elder Scrolls|Skyrim|Oblivion|Morrowind") ~ "The Elder Scrolls",
str_detect(title, "FIFA") ~ "FIFA",
str_detect(title, "Red Dead") ~ "Red Dead Redemption",
TRUE ~ "Outros"
))
# Análise das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title), # jogos únicos, ignorando plataforma
vendas_totais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
# Base de dados com resumo das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title),
vendas_totais = sum(total_sales, na.rm = TRUE),
media_nota = mean(ciritc_score, na.rm = TRUE),
.groups = "drop"
)
# Base de dados com resumo das franquias
df_franquias <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia) %>%
summarise(
quantidade_de_jogos = n_distinct(title),
vendas_totais = sum(total_sales, na.rm = TRUE),
media_nota = mean(critic_score, na.rm = TRUE),
.groups = "drop"
)
# ==========================
# 1. Vendas totais por franquia
# ==========================
ggplot(df_franquias, aes(x = reorder(franquia, vendas_totais), y = vendas_totais)) +
geom_col(fill = "steelblue") +
labs(
title = "Vendas Totais por Franquia",
x = "Franquia",
y = "Vendas Totais (em milhões)"
) +
coord_flip() +
theme_minimal()
# ==========================
# 1. Vendas totais por franquia
# ==========================
ggplot(df_franquias, aes(x = reorder(franquia, vendas_totais), y = vendas_totais)) +
geom_col(fill = "steelblue") +
labs(
title = "Vendas Totais por Franquia",
x = "Franquia",
y = "Vendas Totais (em milhões)"
) +
coord_flip() +
theme_minimal()
```{r}
# ==========================
# 2. Quantidade de jogos por franquia
# ==========================
ggplot(df_franquias, aes(x = reorder(franquia, quantidade_de_jogos), y = quantidade_de_jogos)) +
geom_col(fill = "darkorange") +
labs(
title = "Quantidade de Jogos por Franquia",
x = "Franquia",
y = "Quantidade de Jogos"
) +
coord_flip() +
theme_minimal()
# ==========================
# 3. Média das notas (Meta Score) por franquia
# ==========================
ggplot(df_franquias, aes(x = reorder(franquia, media_nota), y = media_nota)) +
geom_col(fill = "forestgreen") +
labs(
title = "Média das Notas (Meta Score) por Franquia",
x = "Franquia",
y = "Média das Notas"
) +
coord_flip() +
theme_minimal()
# ==========================
# 4. Distribuição das vendas por jogo dentro de cada franquia
# ==========================
df_jogos_franquia <- df_filtrado %>%
filter(franquia != "Outros") %>%
group_by(franquia, title) %>%
summarise(
vendas_globais = sum(total_sales, na.rm = TRUE),
.groups = "drop"
)
ggplot(df_jogos_franquia, aes(x = reorder(title, vendas_globais), y = vendas_globais, fill = franquia)) +
geom_col() +
facet_wrap(~franquia, scales = "free") +
coord_flip() +
labs(
title = "Distribuição das Vendas por Jogo Dentro de Cada Franquia",
x = "Jogo",
y = "Vendas Globais (em milhões)"
) +
theme_minimal() +
theme(legend.position = "none")
