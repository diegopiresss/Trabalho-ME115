summarise(Total_sales = sum(Global_Sales)) %>%
arrange(desc(Total_sales))
ggplot(df_plataforma, aes(x = reorder(Platform, -Total_sales), y = Total_sales)) +
geom_col(fill = 'blue') +
labs(
x = "Videogame",
y = "Vendas Totais (em milhões)",
title = "Vendas Totais por Videogame"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df <- df %>% filter(!Platform %in% c("2600", "PSV", "DC", "SCD", "NG", "WS", "TG16", "3DO", "GG", "PCFX", "GEN"))
df_plataforma <- df %>%
group_by(Platform) %>%
summarise(Total_sales = sum(Global_Sales)) %>%
arrange(desc(Total_sales))
ggplot(df_plataforma, aes(x = reorder(Platform, -Total_sales), y = Total_sales)) +
geom_col(fill = 'blue') +
labs(
x = "Videogame",
y = "Vendas Totais (em milhões)",
title = "Vendas Totais por Videogame"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>% group_by(genre)
df %>% group_by(Genre)
df %>% group_by(Genre) %>%
summarise(Total_per_genre <- sum(Platform))
df %>% group_by(Genre) %>%
summarise(Total_per_genre <- sum(Genre))
df %>% count(genre)
df %>% count(Genre)
ggplot
ggplot(aes(x = Genre, y = n)) +
geom_bar() +
labs(title = "Quantidade de jogos por gênero", x = "Gênero", y = "Quantidade de jogos")
ggplot(df, aes(x = Genre, y = n)) +
geom_bar() +
labs(title = "Quantidade de jogos por gênero", x = "Gênero", y = "Quantidade de jogos")
ggplot(df, aes(x = Genre, y = df %>% count(Genre))) +
geom_bar() +
labs(title = "Quantidade de jogos por gênero", x = "Gênero", y = "Quantidade de jogos")
df %>% count(Genre) %>%
ggplot(df, aes(x = Genre, y = df %>% count(Genre))) +
geom_bar() +
labs(title = "Quantidade de jogos por gênero", x = "Gênero", y = "Quantidade de jogos")
df %>% count(Genre) %>%
ggplot(df, aes(x = Genre, y = n)) +
geom_bar() +
labs(title = "Quantidade de jogos por gênero", x = "Gênero", y = "Quantidade de jogos")
### Separando o dataset por gênero de jogos
df %>%
count(Genre) %>%
ggplot(aes(x = Genre, y = n)) +   # Remove o 'df' de dentro do ggplot()
geom_col(fill = "steelblue") +    # Use geom_col() para valores já contados
labs(title = "Quantidade de jogos por gênero",
x = "Gênero",
y = "Quantidade de jogos") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df_platform
df_platforma
### Importar bibliotecas
setwd("C:\\Users\\dipis\\OneDrive\\Área de Trabalho\\Pastas\\R\\Trabalho R")
library(git2r)
library(ggplot2)
library(tidyr)
library(readr)
library(forcats)
library(dplyr)
df <- read_csv('dados_games.csv')
df
unique(df$Platform)
#df %>% filter('Platform' == 'Wii')
```
```{r}
library(ggplot2)
ggplot(df, aes(x = fct_infreq(Platform))) +
geom_bar(width = 0.5, color = 'blue', fill = 'blue') +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Consoles", y = "Quantidade de jogos", title = "Quantidade de jogos por plataforma")
ggplot(df, aes(x = fct_infreq(Platform))) +
geom_bar(width = 0.5, color = 'blue', fill = 'blue') +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Consoles", y = "Quantidade de jogos", title = "Quantidade de jogos por plataforma")
```{r}
### Começando a fazer um gráfico de vendas por cada video-game - para focarmos as análises somente para os videogmes que são mais relevantes
df_plataforma <- df %>%
group_by(Platform) %>%
summarise(Total_sales = sum(Global_Sales)) %>%
arrange(desc(Total_sales))
ggplot(df_plataforma, aes(x = reorder(Platform, -Total_sales), y = Total_sales)) +
geom_col(fill = 'blue') +
labs(
x = "Videogame",
y = "Vendas Totais (em milhões)",
title = "Vendas Totais por Videogame"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
```{r}
df <- df %>% filter(!Platform %in% c("2600", "PSV", "DC", "SCD", "NG", "WS", "TG16", "3DO", "GG", "PCFX", "GEN"))
df_plataforma <- df %>%
group_by(Platform) %>%
summarise(Total_sales = sum(Global_Sales)) %>%
arrange(desc(Total_sales))
ggplot(df_plataforma, aes(x = reorder(Platform, -Total_sales), y = Total_sales)) +
geom_col(fill = 'blue') +
labs(
x = "Videogame",
y = "Vendas Totais (em milhões)",
title = "Vendas Totais por Videogame"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_plataforma, aes(x = reorder(Platform, -Total_sales), y = Total_sales)) +
geom_col(fill = 'blue') +
labs(
x = "Videogame",
y = "Vendas Totais (em milhões)",
title = "Vendas Totais por Videogame"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.
When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).
The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike *Knit*, *Preview* does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.
df %>%
count(Genre) %>%
ggplot(aes(x = Genre, y = n)) +
geom_col(fill = "steelblue") +
labs(title = "Quantidade de jogos por gênero",
x = "Gênero",
y = "Quantidade de jogos") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
```{r}
df_platforma
df_plataforma <- df %>%
group_by(Platform) %>%
summarise(Total_sales = sum(Global_Sales)) %>%
arrange(desc(Total_sales))
ggplot(df_plataforma, aes(x = reorder(Platform, -Total_sales), y = Total_sales)) +
geom_col(fill = 'blue') +
labs(
x = "Videogame",
y = "Vendas Totais (em milhões)",
title = "Vendas Totais por Videogame"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_plataforma, aes(x = reorder(Platform, -Total_sales), y = Total_sales)) +
geom_col(fill = 'blue') +
labs(
x = "Videogame",
y = "Vendas Totais (em milhões)",
title = "Vendas Totais por Videogame"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.
When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).
The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike *Knit*, *Preview* does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.
df %>%
count(Genre) %>%
ggplot(aes(x = Genre, y = n)) +
geom_col(fill = "steelblue") +
labs(title = "Quantidade de jogos por gênero",
x = "Gênero",
y = "Quantidade de jogos") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
```{r}
df_platforma
df <- df %>% filter(!Platform %in% c("2600", "PSV", "DC", "SCD", "NG", "WS", "TG16", "3DO", "GG", "PCFX", "GEN"))
df_plataforma <- df %>%
group_by(Platform) %>%
summarise(Total_sales = sum(Global_Sales)) %>%
arrange(desc(Total_sales))
ggplot(df_plataforma, aes(x = reorder(Platform, -Total_sales), y = Total_sales)) +
geom_col(fill = 'blue') +
labs(
x = "Videogame",
y = "Vendas Totais (em milhões)",
title = "Vendas Totais por Videogame"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_plataforma, aes(x = reorder(Platform, -Total_sales), y = Total_sales)) +
geom_col(fill = 'blue') +
labs(
x = "Videogame",
y = "Vendas Totais (em milhões)",
title = "Vendas Totais por Videogame"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.
When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).
The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike *Knit*, *Preview* does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.
df %>%
count(Genre) %>%
ggplot(aes(x = Genre, y = n)) +
geom_col(fill = "steelblue") +
labs(title = "Quantidade de jogos por gênero",
x = "Gênero",
y = "Quantidade de jogos") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df
df
ggplot(data = df, )
df
ggplot(data = df,
mapping = aes(x = year,
y = Genre))
df
ggplot(data = df,
mapping = aes(x = year,
y = Global_Sales))
ggplot(data = df,
mapping = aes(x = year,
y = Global_Sales)) +
geom_bar()
ggplot(data = df,
mapping = aes(x = Year,
y = Global_Sales)) +
geom_bar()
ggplot(data = df,
mapping = aes(x = Year, y = Global_Sales)) +
geom_bar()
ggplot(data = df,
mapping = aes(x = Year, y = Global_Sales)) +
geom_histogram()
ggplot(data = df,
mapping = aes(x = Year, y = Global_Sales)) +
geom_boxplot()
ggplot(data = df,
mapping = aes(x = Year, y = Global_Sales)) +
geom_boxplot(size = 5)
ggplot(data = df,
mapping = aes(x = Year, y = Global_Sales)) +
geom_boxplot(size = 3)
ggplot(df, aes(Platform, Total_sales)) +
geom_point() +
geom_line
ggplot(df, aes(Platform, Total_sales)) +
geom_point() +
geom_line()
ggplot(df, aes(Platform == "Wii", Total_sales)) +
geom_point() +
geom_line()
df
df %>% filter(Platform == "Wii")
df %>% filter(Platform == "Wii") %>%
ggplot(aes(Genre)) +
geom_bar() +
labs(title = "Gêneros em Jogos de Wii",
x = "Gênero",
y = "Quantidade")
df %>%
filter(Platform == "Wii") %>%
count(Genre) %>%
arrange(desc(n)) %>%
ggplot(aes(x = Genre, y = n)) +
geom_bar(stat = "identity") +
labs(title = "Quantidade de Jogos por Gênero no Wii",
x = "Gênero", y = "Quantidade") +
coord_flip() +
theme_minimal()
mutate(Genre = factor(Genre, levels = Genre)) %>%
df %>%
filter(Platform == "Wii") %>%
count(Genre) %>%
arrange(desc(n)) %>%
mutate(Genre = factor(Genre, levels = Genre)) %>%
ggplot(aes(x = Genre, y = n)) +
geom_bar(stat = "identity") +
labs(title = "Quantidade de Jogos por Gênero no Wii",
x = "Gênero", y = "Quantidade") +
coord_flip() +
theme_minimal()
df %>%
filter(Platform == "Wii") %>%
count(Genre) %>%
arrange(desc(n)) %>%
mutate(Genre = factor(Genre, levels = Genre)) %>%
ggplot(aes(x = Genre, y = n)) +
geom_bar(stat = "identity") +
labs(title = "Quantidade de Jogos por Gênero no Wii",
x = "Gênero", y = "Quantidade") +
coord_flip() +
theme_minimal()
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales), y = Global_Sales)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal()
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales), y = Global_Sales)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
```
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales), y = Global_Sales)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos",
x = "Jogo",
y = "Vendas Globais (em milhões)")
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales), y = Global_Sales)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales), y = Global_Sales)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal()
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales),
y = Global_Sales,
fill = Publisher)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos (Por Publisher)",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal() +
theme(legend.position = "bottom")  # Legenda embaixo para facilitar leitura
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales),
y = Global_Sales,
fill = Publisher)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos (Por Publisher)",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal() +
theme(legend.position = "left")  # Legenda embaixo para facilitar leitura
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales),
y = Global_Sales,
fill = Publisher)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos (Por Publisher)",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal() +
theme(legend.position = "right")  # Legenda embaixo para facilitar leitura
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales),
y = Global_Sales,
fill = Publisher)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos (Por Publisher)",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c(
"Nintendo" = "#E60012",
"Microsoft Game Studios" = "#0072C6",
"Take-Two Interactive" = "#F2A900",
))
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales),
y = Global_Sales,
fill = Publisher)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos (Por Publisher)",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c(
"Nintendo" = "#E60012",
"Take-Two Interactive" = "#F2A900",
"Microsoft Game Studios" = "#4CAF50"
))
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales),
y = Global_Sales,
fill = Publisher)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos (Por Publisher)",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c(
"Nintendo" = "lightcoral",
"Take-Two Interactive" = "#F2A900",
"Microsoft Game Studios" = "#4CAF50"
))
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales),
y = Global_Sales,
fill = Publisher)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos (Por Publisher)",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c(
"Nintendo" = "salmon",
"Take-Two Interactive" = "#F2A900",
"Microsoft Game Studios" = "#4CAF50"
))
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales),
y = Global_Sales,
fill = Publisher)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos (Por Publisher)",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c(
"Nintendo" = "lightcoral",
"Take-Two Interactive" = "#F2A900",
"Microsoft Game Studios" = "#4CAF50"
))
df %>%
arrange(desc(Global_Sales)) %>%
slice_head(n = 20) %>%
ggplot(aes(x = reorder(Name, Global_Sales),
y = Global_Sales,
fill = Publisher)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 20 Jogos Mais Vendidos (Por Publisher)",
x = "Jogo",
y = "Vendas Globais (em milhões)") +
theme_minimal() +
theme(legend.position = "right") +
scale_fill_manual(values = c(
"Nintendo" = "lightcoral",
"Take-Two Interactive" = "#F2A900",
"Microsoft Game Studios" = "#4CAF50"
))
df <- read_csv('vgchartz-2024')
### Importar bibliotecas
setwd("C:\\Users\\dipis\\OneDrive\\Área de Trabalho\\Pastas\\R\\Trabalho R")
df <- read_csv('vgchartz-2024')
df <- read_csv('dados_games_a')
df <- read_csv('dados_games_a')
df <- read_csv('dados_games_a')
df <- read_csv('dados_games_a')
df <- read_csv('dados_games_a')
df <- read_csv('dados_games')
### Importar bibliotecas
setwd("C:\\Users\\dipis\\OneDrive\\Área de Trabalho\\Pastas\\R\\Trabalho R")
df <- read_csv('dados_games')
df
### Importar bibliotecas
setwd("C:\\Users\\dipis\\OneDrive\\Área de Trabalho\\Pastas\\R\\Trabalho R")
df <- read_csv('dados_games_a')
library(git2r)
library(ggplot2)
library(ggplot2)
library(tidyr)
library(readr)
library(ggplot2)
library(tidyr)
library(readr)
library(forcats)
library(dplyr)
df <- read_csv('dados_games_a')
library(renv)
### Importar bibliotecas
setwd("C:\\Users\\dipis\\OneDrive\\Área de Trabalho\\Pastas\\R\\Trabalho R")
df <- read_csv('dados_games_a')
df <- read_csv('dados_games_a')
df
renv::init()
